#!/data/data/com.termux/files/usr/bin/bash

clear

echo -e "\e[1;31m Allow Storage permission...\nIf prompted (for directory '~/storage') press y and hit enter to continue...\nCarefully read and follow the instructions for success..\nTo update this tool press CTRL+c and then run \e[0m"

echo -e "\e[1;32m clear && cd ~ && bash ~/SignGen/update \e[0m"

read -p "Hit enter to use this tool ..."

termux-setup-storage

clear

echo -e "\e[1;32m storage permission granted \e[0m"

read -p "Hit enter to continue ..."

clear

echo -e "\e[1;31m Tool created by 4RCH1 H4CK3R \e[0m"

echo    

echo -e "\e[1;31m This tool is only for Java keystore(.jks) files\nGenerated with keystore explorer app (recommended)... \e[0m"

echo   

echo -e "\e[1;32m This tool will automatically detect the required\npackages and install them if not available...\nAllow Storage permission to termux (If not allowed)\nbefore using this script... \e[0m"

echo   

echo -e "\e[1;34m The output file will be generated with the name privkey(private key), pcert(primary certificate) and with\nextension (.pk8), (.x509.pem). \e[0m"

echo -e "Please enter the location path of the directory which\ncontains your keystore file below and hit enter..."

echo -e "\e[1;31m NOTE : There should be only one keystore file in the\ndirectory... \e[0m"

read my_var

echo   

mkdir /storage/emulated/0/.{tmpkey}

clear

echo -e "\e[1;33m NOTE1: When asked for password write the alias password of the keystore file and hit enter everytime(total 5\ntimes, enter import password twice)...\n\nNOTE2: The password will not be visible for security\nreasons, so do not worry about that... \e[0m"

echo   

echo -e "\e[1;31m Have you read the instructions carefully ? \e[0m"

read -p "If yes hit enter to continue ..."

clear

cp -r ${my_var}/*.jks /storage/emulated/0/.{tmpkey}

clear

pkg install openssl-tool -y

clear

pkg install openjdk-17 -y

clear

keytool -importkeystore -srckeystore /storage/emulated/0/.{tmpkey}/*.jks -destkeystore /storage/emulated/0/.{tmpkey}/key.p12 -srcstoretype JKS -deststoretype PKCS12

clear

openssl pkcs12 -in /storage/emulated/0/.{tmpkey}/key.p12  -nokeys -out /storage/emulated/0/.{tmpkey}/pcert.x509.pem

openssl pkcs12 -in /storage/emulated/0/.{tmpkey}/key.p12 -nodes -out /storage/emulated/0/.{tmpkey}/key.rsa.pem

clear

openssl pkcs8 -topk8 -outform DER -in /storage/emulated/0/.{tmpkey}/key.rsa.pem -inform PEM -out /storage/emulated/0/.{tmpkey}/privkey.pk8 -nocrypt

clear

echo "Please enter the output directory path (You should enter the path of an existing directory) to save the file ..."

read my_var

clear

rm -rff ${my_var}/pcert.x509.pem

rm -rff ${my_var}/privkey.pk8

cp -r /storage/emulated/0/.{tmpkey}/pcert.x509.pem ${my_var}

cp -r /storage/emulated/0/.{tmpkey}/privkey.pk8 ${my_var}

rm -rff  /storage/emulated/0/.{tmpkey}

clear

echo -e "\e[1;32m ðŸ™‚ðŸ˜‡Thanks for using my scriptðŸ˜‡ðŸ˜Ž \e[0m"

cd
